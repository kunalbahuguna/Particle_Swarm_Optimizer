#PSO MAKE FILE
CXX := g++
CXXFLAGS := -Wall -Wextra -std=c++17 -Iinclude/ -MMD
# Directories
SRC_DIRS := src
OBJ_DIR := obj

# Source and object files
SRCS := $(wildcard $(addsuffix /*.cpp,$(SRC_DIRS)))
OBJS := $(patsubst %.cpp,$(OBJ_DIR)/%.o,$(notdir $(SRCS)))

# Output binary
TARGET := pso_solver

# Default target
all: $(TARGET)

# Rule to link the final binary
$(TARGET): $(OBJS)
	$(CXX) $(OBJS) -o $@

# Rule to compile each source file into an object file
$(OBJ_DIR)/%.o: $(SRC_DIRS)/%.cpp
	@mkdir -p $(dir $@)
	$(CXX) $(CXXFLAGS) -c $< -o $@

# Include dependency files generated by -MMD
-include $(OBJS:.o=.d)

# Clean rule to remove compiled files
clean:
	rm -rf $(OBJ_DIR)/*.o $(OBJ_DIR)/*.d $(TARGET)

# Phony targets
.PHONY: all clean
